Tpar -- A T-gate optimizing resynthesis algorithm (arXiv:1303.2042)

Written by Matthew Amy

We kindly request that anyone using this code to optimize circuits
acknowledges the tool and/or the paper on which it is based in their work

BUILD
------------------------------

To build tpar, run make in the top level folder.

tpar requires the following libraries:

-- Boost

Boost should be available through your package manager. Additionally, 
your compiler needs to support the c++0x/c++11 standard, or otherwise
the code will likely require some modifications.

USAGE
------------------------------
Run tpar with
  tpar [options]

tpar takes a circuit in the .qc format (a description can be found at
http://qcirc.iqc.uwaterloo.ca/QCViewer/QCViewerDocumentation.pdf) from
standard input and outputs the resulting .qc circuit to standard output.
The circuit can only contain the single qubit gates H, P, P*, T, T*, X,
Y, Z, and the two qubit tof (CNOT) gate. It also accepts doubly controlled
Z gates, i.e. Z a b c.

A lot of extra output is supplied on standard error. There is currently no
option to turn it off, so either stderr or stdout should be redirected as
necessary.

Currently, the only options available are
  -no-hadamard - This option performs the Tpar optimization only on subcircuits 
                 between H gates, analogous to the original {CNOT, T} algorithm 
                 described in arXiv:1303.2042.
  -no-post-process - This option turns off post processing of the circuit to 
                     remove swap gates and trivial identities. Turning this off
                     makes significant difference in runtime on very large 
                     circuits.

The algorithm is described in arXiv:1303.2042, but essentially it generates
a sum over paths type description of the circuit where phases and qubit
states are linear Boolean functions of the input variables and Hadamards
generate new variables. It then uses matroid theory to group phases
together intelligently and lay them out in parallel stages.

This README is far from complete, so please feel free to email me at 
matt.e.amy@gmail.com if you have any questions or if you find any bugs.
